// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CpsCheatClick.proto

package com.jd.ad.anti.cps.entity;

public final class CpsCheatClick {
  private CpsCheatClick() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CpsCheatClickInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string click_id = 1;
    /**
     * <code>required string click_id = 1;</code>
     *
     * <pre>
     * 点击id
     * </pre>
     */
    boolean hasClickId();
    /**
     * <code>required string click_id = 1;</code>
     *
     * <pre>
     * 点击id
     * </pre>
     */
    String getClickId();
    /**
     * <code>required string click_id = 1;</code>
     *
     * <pre>
     * 点击id
     * </pre>
     */
    com.google.protobuf.ByteString
        getClickIdBytes();

    // repeated string policy_id = 2;
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    java.util.List<String>
    getPolicyIdList();
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    int getPolicyIdCount();
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    String getPolicyId(int index);
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getPolicyIdBytes(int index);

    // optional int64 click_time = 3;
    /**
     * <code>optional int64 click_time = 3;</code>
     *
     * <pre>
     * 点击生成时间
     * </pre>
     */
    boolean hasClickTime();
    /**
     * <code>optional int64 click_time = 3;</code>
     *
     * <pre>
     * 点击生成时间
     * </pre>
     */
    long getClickTime();
  }
  /**
   * Protobuf type {@code entity.CpsCheatClickInfo}
   */
  public static final class CpsCheatClickInfo extends
      com.google.protobuf.GeneratedMessage
      implements CpsCheatClickInfoOrBuilder {
    // Use CpsCheatClickInfo.newBuilder() to construct.
    private CpsCheatClickInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CpsCheatClickInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CpsCheatClickInfo defaultInstance;
    public static CpsCheatClickInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CpsCheatClickInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CpsCheatClickInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              clickId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                policyId_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              policyId_.add(input.readBytes());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              clickTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          policyId_ = new com.google.protobuf.UnmodifiableLazyStringList(policyId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CpsCheatClick.internal_static_entity_CpsCheatClickInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CpsCheatClick.internal_static_entity_CpsCheatClickInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CpsCheatClickInfo.class, Builder.class);
    }

    public static com.google.protobuf.Parser<CpsCheatClickInfo> PARSER =
        new com.google.protobuf.AbstractParser<CpsCheatClickInfo>() {
      public CpsCheatClickInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CpsCheatClickInfo(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<CpsCheatClickInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string click_id = 1;
    public static final int CLICK_ID_FIELD_NUMBER = 1;
    private Object clickId_;
    /**
     * <code>required string click_id = 1;</code>
     *
     * <pre>
     * 点击id
     * </pre>
     */
    public boolean hasClickId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string click_id = 1;</code>
     *
     * <pre>
     * 点击id
     * </pre>
     */
    public String getClickId() {
      Object ref = clickId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clickId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string click_id = 1;</code>
     *
     * <pre>
     * 点击id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClickIdBytes() {
      Object ref = clickId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        clickId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string policy_id = 2;
    public static final int POLICY_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList policyId_;
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    public java.util.List<String>
        getPolicyIdList() {
      return policyId_;
    }
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    public int getPolicyIdCount() {
      return policyId_.size();
    }
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    public String getPolicyId(int index) {
      return policyId_.get(index);
    }
    /**
     * <code>repeated string policy_id = 2;</code>
     *
     * <pre>
     * 作弊信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPolicyIdBytes(int index) {
      return policyId_.getByteString(index);
    }

    // optional int64 click_time = 3;
    public static final int CLICK_TIME_FIELD_NUMBER = 3;
    private long clickTime_;
    /**
     * <code>optional int64 click_time = 3;</code>
     *
     * <pre>
     * 点击生成时间
     * </pre>
     */
    public boolean hasClickTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 click_time = 3;</code>
     *
     * <pre>
     * 点击生成时间
     * </pre>
     */
    public long getClickTime() {
      return clickTime_;
    }

    private void initFields() {
      clickId_ = "";
      policyId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      clickTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClickId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClickIdBytes());
      }
      for (int i = 0; i < policyId_.size(); i++) {
        output.writeBytes(2, policyId_.getByteString(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, clickTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClickIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < policyId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(policyId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPolicyIdList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, clickTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static CpsCheatClickInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CpsCheatClickInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CpsCheatClickInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CpsCheatClickInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CpsCheatClickInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static CpsCheatClickInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static CpsCheatClickInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static CpsCheatClickInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static CpsCheatClickInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static CpsCheatClickInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CpsCheatClickInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code entity.CpsCheatClickInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CpsCheatClickInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CpsCheatClick.internal_static_entity_CpsCheatClickInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CpsCheatClick.internal_static_entity_CpsCheatClickInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CpsCheatClickInfo.class, Builder.class);
      }

      // Construct using com.jd.ad.anti.cps.entity.CpsCheatClick.CpsCheatClickInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clickId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        policyId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        clickTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CpsCheatClick.internal_static_entity_CpsCheatClickInfo_descriptor;
      }

      public CpsCheatClickInfo getDefaultInstanceForType() {
        return CpsCheatClickInfo.getDefaultInstance();
      }

      public CpsCheatClickInfo build() {
        CpsCheatClickInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public CpsCheatClickInfo buildPartial() {
        CpsCheatClickInfo result = new CpsCheatClickInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clickId_ = clickId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          policyId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              policyId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.policyId_ = policyId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clickTime_ = clickTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CpsCheatClickInfo) {
          return mergeFrom((CpsCheatClickInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CpsCheatClickInfo other) {
        if (other == CpsCheatClickInfo.getDefaultInstance()) return this;
        if (other.hasClickId()) {
          bitField0_ |= 0x00000001;
          clickId_ = other.clickId_;
          onChanged();
        }
        if (!other.policyId_.isEmpty()) {
          if (policyId_.isEmpty()) {
            policyId_ = other.policyId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePolicyIdIsMutable();
            policyId_.addAll(other.policyId_);
          }
          onChanged();
        }
        if (other.hasClickTime()) {
          setClickTime(other.getClickTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClickId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CpsCheatClickInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CpsCheatClickInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string click_id = 1;
      private Object clickId_ = "";
      /**
       * <code>required string click_id = 1;</code>
       *
       * <pre>
       * 点击id
       * </pre>
       */
      public boolean hasClickId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string click_id = 1;</code>
       *
       * <pre>
       * 点击id
       * </pre>
       */
      public String getClickId() {
        Object ref = clickId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          clickId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string click_id = 1;</code>
       *
       * <pre>
       * 点击id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClickIdBytes() {
        Object ref = clickId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          clickId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string click_id = 1;</code>
       *
       * <pre>
       * 点击id
       * </pre>
       */
      public Builder setClickId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string click_id = 1;</code>
       *
       * <pre>
       * 点击id
       * </pre>
       */
      public Builder clearClickId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clickId_ = getDefaultInstance().getClickId();
        onChanged();
        return this;
      }
      /**
       * <code>required string click_id = 1;</code>
       *
       * <pre>
       * 点击id
       * </pre>
       */
      public Builder setClickIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clickId_ = value;
        onChanged();
        return this;
      }

      // repeated string policy_id = 2;
      private com.google.protobuf.LazyStringList policyId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePolicyIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          policyId_ = new com.google.protobuf.LazyStringArrayList(policyId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public java.util.List<String>
          getPolicyIdList() {
        return java.util.Collections.unmodifiableList(policyId_);
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public int getPolicyIdCount() {
        return policyId_.size();
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public String getPolicyId(int index) {
        return policyId_.get(index);
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPolicyIdBytes(int index) {
        return policyId_.getByteString(index);
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public Builder setPolicyId(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePolicyIdIsMutable();
        policyId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public Builder addPolicyId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePolicyIdIsMutable();
        policyId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public Builder addAllPolicyId(
          Iterable<String> values) {
        ensurePolicyIdIsMutable();
        super.addAll(values, policyId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public Builder clearPolicyId() {
        policyId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string policy_id = 2;</code>
       *
       * <pre>
       * 作弊信息
       * </pre>
       */
      public Builder addPolicyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePolicyIdIsMutable();
        policyId_.add(value);
        onChanged();
        return this;
      }

      // optional int64 click_time = 3;
      private long clickTime_ ;
      /**
       * <code>optional int64 click_time = 3;</code>
       *
       * <pre>
       * 点击生成时间
       * </pre>
       */
      public boolean hasClickTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 click_time = 3;</code>
       *
       * <pre>
       * 点击生成时间
       * </pre>
       */
      public long getClickTime() {
        return clickTime_;
      }
      /**
       * <code>optional int64 click_time = 3;</code>
       *
       * <pre>
       * 点击生成时间
       * </pre>
       */
      public Builder setClickTime(long value) {
        bitField0_ |= 0x00000004;
        clickTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 click_time = 3;</code>
       *
       * <pre>
       * 点击生成时间
       * </pre>
       */
      public Builder clearClickTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clickTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:entity.CpsCheatClickInfo)
    }

    static {
      defaultInstance = new CpsCheatClickInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:entity.CpsCheatClickInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_entity_CpsCheatClickInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_entity_CpsCheatClickInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\023CpsCheatClick.proto\022\006entity\"L\n\021CpsChea" +
      "tClickInfo\022\020\n\010click_id\030\001 \002(\t\022\021\n\tpolicy_i" +
      "d\030\002 \003(\t\022\022\n\nclick_time\030\003 \001(\003B\033\n\031com.jd.ad" +
      ".anti.cps.entity"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_entity_CpsCheatClickInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_entity_CpsCheatClickInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_entity_CpsCheatClickInfo_descriptor,
              new String[] { "ClickId", "PolicyId", "ClickTime", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
